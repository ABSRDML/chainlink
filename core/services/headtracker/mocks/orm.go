// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	common "github.com/ethereum/go-ethereum/common"

	headtracker "github.com/smartcontractkit/chainlink/core/services/headtracker"

	mock "github.com/stretchr/testify/mock"
)

// ORM is an autogenerated mock type for the ORM type
type ORM struct {
	mock.Mock
}

// GetBlock provides a mock function with given fields: ctx, hash
func (_m *ORM) GetBlock(ctx context.Context, hash common.Hash) (*headtracker.Block, error) {
	ret := _m.Called(ctx, hash)

	var r0 *headtracker.Block
	if rf, ok := ret.Get(0).(func(context.Context, common.Hash) *headtracker.Block); ok {
		r0 = rf(ctx, hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*headtracker.Block)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, common.Hash) error); ok {
		r1 = rf(ctx, hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveBlock provides a mock function with given fields: ctx, block
func (_m *ORM) SaveBlock(ctx context.Context, block *headtracker.Block) error {
	ret := _m.Called(ctx, block)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *headtracker.Block) error); ok {
		r0 = rf(ctx, block)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
